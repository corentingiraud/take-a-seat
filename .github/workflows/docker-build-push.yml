name: Build / push Docker

on:
  push:
    branches: [ "main" ]
    paths:
      - "backend/**"
      - "frontend/**"
      - ".github/workflows/docker-build-push.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "backend/**"
      - "frontend/**"
      - ".github/workflows/docker-build-push.yml"
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  OWNER: corentingiraud
  IMAGE: take-a-seat
  PLATFORMS: linux/amd64

jobs:
  docker:
    name: build & push (${{ matrix.service.id }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        service:
          - id: backend
            context: ./backend
            file: ./backend/Dockerfile
            tag_suffix: backend-latest
          - id: frontend
            context: ./frontend
            file: ./frontend/Dockerfile
            tag_suffix: frontend-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: log in to ghcr
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: extract docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE }}
          tags: |
            type=raw,value=${{ matrix.service.tag_suffix }}
            type=raw,value=${{ matrix.service.id }}-${{ github.sha }}
            type=ref,event=tag

      - name: build & push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.file }}
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
